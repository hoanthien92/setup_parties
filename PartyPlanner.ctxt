#BlueJ class context
comment0.params=
comment0.target=PartyPlanner()
comment0.text=\r\n\ Creates\ a\ new\ Party\ Planner\ using\ the\ default\ manager\ name\ and\ a\ Party\ with\ default\ values\r\n
comment1.params=fileName
comment1.target=PartyPlanner(java.lang.String)
comment1.text=\r\n\ Create\ a\ new\ Party\ Planner\ by\ passing\ to\ another\ contructor\ using\ loadParties\ method\ to\ process\ if\ it's\ from\ text\ or\ object\r\n\ Throws\ \:\ PartyPlannerException\ if\ when\ creating\ PartyPlanner,\ it\ gets\ some\ exceptions\r\n
comment10.params=party
comment10.target=void\ addToParties(Party)
comment10.text=\r\n\ Add\ new\ Party\ Object\ into\ PartyPlanner\ Object\ using\ HashMap\r\n\ Precondition\:\ Party's\ Name\ and\ Date\ you\ try\ to\ add\ are\ not\ the\ same\ as\ the\ current\ Parties\r\n\ Postcondition\:\ Create\ new\ party\ if\ name\ and\ date\ are\ different\ otherwese\ show\ error\r\n\ Throws\:\ PartyPlannerException\ if\ it\ has\ some\ exception\ during\ the\ time\ it\ adds\r\n
comment11.params=party\ host\ date\ location\ maxGuests\ perParty\ price
comment11.target=boolean\ addToParties(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ boolean,\ double)
comment11.text=\r\n\ Add\ new\ Party\ Object\ into\ PartyPlanner\ Object\ using\ HashMap\r\n\ Precondition\:\ parameters\ are\ not\ null\ \r\n\ Postcondition\:\ return\ true\ if\ it\ is\ succesfully\ executed\ and\ false\ if\ not.\ \r\n\ Throws\:\ PartyPlannerException\ if\ it\ has\ some\ exception\ during\ the\ time\ it\ adds\r\n
comment12.params=partyName\ date
comment12.target=Party\ findParty(java.lang.String,\ java.lang.String)
comment12.text=\r\n\ Method\ to\ find\ a\ Party\ based\ on\ its\ specific\ Name\ and\ Date\r\n\ PostCondition\:\ parameter\ not\ null\r\n\ PostCondition\:\ return\ the\ correct\ Party\r\n
comment13.params=
comment13.target=double\ getAverageCostPerPerson()
comment13.text=\r\n\ Method\ to\ get\ the\ average\ Cost\ per\ Person\r\n\ Return\ the\ cost\ for\ per\ person\ in\ Double\ Type\r\n\ Condition\:\ \ \ if\ the\ party\ is\ not\ Paid\ then\ the\ average\ would\ be\ zero.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ calculate\ when\ the\ Party\ is\ paid\r\n
comment14.params=
comment14.target=java.lang.String\ getState()
comment14.text=\r\n\ Method\ to\ get\ the\ state\ of\ all\ parties\r\n\ Precondition\:\ return\ the\ string\ of\ all\ parties\ +\ planner.\r\n
comment15.params=name\ date
comment15.target=int\ getNumAttending(java.lang.String,\ java.lang.String)
comment15.text=\r\n\ Method\ to\ get\ number\ of\ people\ who\ are\ attending\r\n\ postcodition\:\ not\ null\r\n\ precondition\:\ return\ the\ integer\ number\ of\ the\ total\ people\ who\ are\ attending\r\n
comment16.params=name\ date
comment16.target=int\ getNumNotAttending(java.lang.String,\ java.lang.String)
comment16.text=\r\n\ Method\ to\ get\ Number\ of\ people\ who\ are\ not\ attending\r\n\ Postcondition\:\ not\ null\r\n\ Precondition\:\ return\ the\ integer\ total\ of\ people\ who\ are\ not\ attending\r\n\ \r\n
comment17.params=name\ date
comment17.target=int\ getNumUnknown(java.lang.String,\ java.lang.String)
comment17.text=\r\nMethod\ to\ get\ number\ of\ unknown\ people\r\nPostcodition\:\ not\ null\r\nPrecondition\:\ return\ integer\ of\ total\ unknown\r\n
comment18.params=
comment18.target=java.lang.String\ getPaidParties()
comment18.text=\r\n\ \ Method\ to\ get\ Parties\ that\ are\ paid\r\n\ \ Precondition\:\ not\ null\r\n\ \ Postcondition\:\ return\ the\ paid\ Parties\ in\ String.\r\n
comment19.params=
comment19.target=java.lang.String\ getUnpaidParties()
comment19.text=\r\n\ \ Method\ to\ get\ Parties\ that\ are\ unpaid\r\n\ \ Precondition\:\ not\ null\r\n\ \ Postcondition\:\ return\ the\ unpaid\ Parties\ in\ String.\r\n
comment2.params=fileName\ isObjectFile
comment2.target=PartyPlanner(java.lang.String,\ boolean)
comment2.text=\r\n\ Create\ a\ new\ Party\ Planner\ using\ loadParties\ method\r\n\ throws\ \:\ PartyPlannerException\ if\ when\ creating\ PartyPlanner,\ it\ gets\ some\ exceptions\r\n
comment20.params=name\ date
comment20.target=java.lang.String\ getWhosInvited(java.lang.String,\ java.lang.String)
comment20.text=\r\n\ Method\ to\ get\ who\ is\ invited\r\n\ Precondition\:\ not\ null\r\n\ Postcondition\:\ return\ the\ \ people\ who\ are\ invited\ in\ String\r\n
comment21.params=who\ partyName\ date
comment21.target=boolean\ invite(java.lang.String,\ java.lang.String,\ java.lang.String)
comment21.text=\r\n\ Method\ to\ invite\ a\ person\ to\ a\ specific\ date\ and\ party's\ Name\r\n\ Precondition\:\ party\ is\ found\ and\ not\ null\r\n\ Postcondition\:\ return\ true\ if\ invite\ successfully\ and\ false\ if\ not\r\n
comment22.params=who
comment22.target=java.lang.String\ inviteToAll(java.lang.String)
comment22.text=\r\n\ Method\ to\ invite\ a\ person\ to\ all\ parties\r\n\ precondition\:\ parties\ are\ not\ null\ and\ the\ person\ is\ not\ already\ invited\r\n\ Postcondition\:\ return\ an\ appropriate\ message\ in\ string\ whethere\ invite\ to\ all\ successfully\ or\ not\ with\ party's\ name\ and\ date\r\n
comment23.params=name\ date
comment23.target=java.lang.String\ pay(java.lang.String,\ java.lang.String)
comment23.text=\r\n\ Method\ to\ pay\ for\ a\ party\r\n\ precondition\:\ not\ null\ and\ a\ party\ is\ not\ paid\r\n\ postcondition\:\ return\ a\ string\ to\ determine\ how\ much\ it\ costs\r\n
comment24.params=name\ date\ numMonths
comment24.target=java.lang.String\ pay(java.lang.String,\ java.lang.String,\ int)
comment24.text=\r\n\ Metod\ to\ pay\ for\ a\ party\ per\ month\ \r\n\ (the\ cost\ per\ month\ depends\ on\ how\ many\ months\ are\ input\ \r\n\ \ precondition\:\ not\ null\ \r\n\ \ Postcondition\:\ return\ a\ string\ to\ determin\ how\ much\ it\ costs\ per\ month\r\n
comment25.params=
comment25.target=java.lang.String\ toString()
comment25.text=\r\n\ \ \ Print\ out\ the\ Planner's\ name\ and\ Party's\ name\r\n
comment26.params=name\ date\ isPaid
comment26.target=void\ setPaymentStatus(java.lang.String,\ java.lang.String,\ boolean)
comment26.text=\r\n\ \ \ SetPaymentStatus\ method\ to\ set\ up\ the\ payment\ status\ as\ users\ input\r\n
comment27.params=field\ alg
comment27.target=java.lang.String\ sort(int,\ int)
comment27.text=\r\n\ Sorts\ the\ ArrayList\ of\ Party\ objects\:\r\n\ ->\ by\ name\ in\ ascending\ order\ if\ the\ input\ variable\ field\ is\ 1;\r\n\ ->\ by\ DATE\ in\ descending\ order\ if\ the\ input\ variable\ field\ is\ 2;\r\n\ ->\ by\ COST\ of\ Party\ if\ the\ input\ variable\ field\ is\ 3.\r\n\ \r\n\ The\ sorting\ algorithm\ can\ be\ choosen\ by\ the\ input\ variable\ alg,\ in\ which\:\r\n\ ->\ 1\ is\ the\ Selection\ Sorting\ Algorithm;\r\n\ ->\ 2\ is\ the\ Insertion\ Sorting\ Algorithm;\r\n\ \r\n\ Preconditions\:\ field\ end\ ald\ parameters\ must\ be\ in\ [1,\ 3]\ range.<br>\r\n\ Posconditions\:\ The\ ArrayList\ of\ Party\ object\ is\ sorted\ by\ name,\ date\ or\ the\ total\ cost.\r\n
comment28.params=fileName
comment28.target=void\ writeToFile(java.lang.String)
comment28.text=\r\n\ Method\ to\ write\ parties's\ status\ into\ a\ text\ file\r\n\ throws\:\ PartyPlannerException\ if\ it\ has\ some\ exception\ during\ the\ time\ it\ writes\r\n
comment29.params=fileName
comment29.target=void\ writeToObjectFile(java.lang.String)
comment29.text=\r\n\ Method\ to\ write\ parties's\ status\ into\ a\ object\ file\r\n\ throws\:\ PartyPlannerException\ if\ it\ has\ some\ exception\ during\ the\ time\ it\ writes\r\n
comment3.params=
comment3.target=void\ loadParties()
comment3.text=\r\n\ \ \ LoadParties\ method\ without\ return\ type.\ Create\ a\ party\ by\ default\ values.\r\n
comment30.params=name\ date
comment30.target=int\ getMaxGuests(java.lang.String,\ java.lang.String)
comment30.text=\r\n\ Method\ to\ get\ Max\ guests\ \r\n\ Precondition\:\ not\ null\r\n\ Post\ condition\ return\ the\ max\ number\ of\ guests\ in\ the\ party\r\n
comment31.params=who\ partyName\ date
comment31.target=boolean\ takeAccept(java.lang.String,\ java.lang.String,\ java.lang.String)
comment31.text=\r\n\ takeAccept\ method\r\n\ Return\ true\ if\ a\ person\ is\ accepted,\ otherwise\ if\ a\ person\ is\ not\ accepted\ or\ party\ is\ null,\ return\ false\r\n
comment32.params=who\ partyName\ date
comment32.target=boolean\ takeRegret(java.lang.String,\ java.lang.String,\ java.lang.String)
comment32.text=\r\n\ takeRegret\ method\r\n\ Return\ false\ if\ the\ party\ is\ null\ or\ none\ regrets,\ otherwise,\ return\ true.\r\n
comment4.params=fileName\ isObjectFile
comment4.target=java.lang.String\ loadParties(java.lang.String,\ boolean)
comment4.text=\r\n\ Method\ to\ create\ party\ based\ on\ their\ file\ type\r\n\ throws\ \:\ PartyPlannerException\ if\ when\ creating\ PartyPlanner,\ it\ gets\ some\ exceptions\r\n
comment5.params=fileName
comment5.target=java.lang.String\ loadTextParties(java.lang.String)
comment5.text=\r\n\ Create\ Party\ based\ on\ Text\ file\r\n\ Throws\:\ PartyPlannerException\ if\ when\ creating\ a\ party,\ it\ gets\ some\ exceptions\r\n
comment6.params=fileName
comment6.target=java.lang.String\ loadObjectParties(java.lang.String)
comment6.text=\r\n\ Create\ Party\ based\ on\ Onject\ file\r\n\ Throws\:\ PartyPlannerException\ if\ when\ creating\ a\ party,\ it\ gets\ some\ exceptions\r\n
comment7.params=name\ date\ percentage
comment7.target=boolean\ updatePrice(java.lang.String,\ java.lang.String,\ int)
comment7.text=\ updatePrice\ method\ to\ update\ the\ Price\ of\ the\ Party\r\n\ if\ the\ party\ is\ not\ null\ then\ update\ the\ price\ and\ return\ true,\ otherwise,\ return\ false\r\n
comment8.params=planr
comment8.target=void\ setPlannerName(java.lang.String)
comment8.text=\r\n\ \ setPlannerName\ to\ update\ the\ name\ of\ the\ planner\ of\ the\ Party\ \r\n
comment9.params=
comment9.target=java.lang.String\ getPlannerName()
comment9.text=\r\n\ The\ getPlannerName\ method\ gets\ the\ name\ of\ the\ planner\ of\ the\ Party\ and\ return\ it\ as\ the\ String\r\n
numComments=33
